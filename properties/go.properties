
file.patterns.go=*.go
file.patterns.scons=SConstruct;SConscript

shbang.go=go

lexer.*.go=go
use.tabs.*.go=1
tab.size.*.go=4
indent.size.*.go=4

# copied straight from the spec, added primitive types
keywords.*.go= \
break        default      func         interface    select      \
case         defer        go           map          struct      \
chan         else         goto         package      switch      \
const        fallthrough  if           range        type        \
continue     for          import       return       var         \
bool    int     int8    int16   int32   int64                   \
byte    uint    uint8   uint16  uint32  uint64  uintptr         \
float   float32 float64 string  nil     true    false   rune


keywords2.*.go= \
make    real    panic recover   append  close   delete  \
complex imag    new cap copy

if PLAT_WIN
	command.go.*.go=c:\go\bin\go run "$(FileNameExt)"
	command.build.*.go=c:\go\bin\go build "$(FileNameExt)"
    command.compile.*.go=c:\go\bin\go fmt "$(FileNameExt)"
	command.go.subsystem.*.go=0
	#command.go.*.pyw=pythonw -u "$(FileNameExt)"
	#command.go.subsystem.*.pyw=1
	#command.build.SConscript=scons.bat --up .
	#command.build.SConstruct=scons.bat .

if PLAT_GTK
	command.go.*.go=c:\go\bin\go run "$(FileNameExt)"
	#command.build.SConscript=scons --up .
	#command.build.SConstruct=scons .

command.name.1.*.go=Syntax Check
command.1.*.go=c:\go\bin\go run "$(FileNameExt)"

command.name.2.*.go=Go Run
command.2.*.go=c:\go\bin\go run "$(FileNameExt)"